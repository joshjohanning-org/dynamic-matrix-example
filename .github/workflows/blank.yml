# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.json.outputs.repository }}
    steps:
      - name: build matrix
        id: json
        run: |
          repository='{ "repository": ["repo1","repo2","repo3","repo4"] }'
          echo "repository=$repository" >> "$GITHUB_OUTPUT"

  test-output:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - run: echo ${{ needs.setup.outputs.repository }}

  run-matrix:
    needs: setup
    runs-on: ubuntu-latest
    outputs:
      ${{ matrix.repository }}_result: ${{ steps.status.outputs.status }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.repository) }}
    steps:
      - run: echo ${{ matrix.repository }}
      - id: status
        run: | 
          "status=success" >> $GITHUB_OUTPUT

  post:
    if: always()
    needs: run-matrix
    runs-on: ubuntu-latest

    steps:
      - run: | 
          # Parse the JSON and extract the repository array
          repos=$(echo ${{ needs.setup.outputs.repository }} | jq -r '.repository[]')
          
          # Loop through each repository
          for repo in $repos; do
              echo $repo
              echo ${{ needs.run-matrix.outputs["$repo_result"] }}
          done

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
    
      - run: echo ${{ matrix.repository }}
      
